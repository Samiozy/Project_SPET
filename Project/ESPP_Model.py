# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2023-02-24 15:18:42
"""
import arcpy
from arcpy.ia import *

def Model():  # Model

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageAnalyst")
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("ImageExt")

    DSM = arcpy.Raster("DSM")
    Building_Footprints = "Building_Footprints"

    # Process: Area Solar Radiation (Area Solar Radiation) (sa)
    Solar_Rad_Whm2 = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Solar_Rad_Whm2"
    Area_Solar_Radiation = Solar_Rad_Whm2
    Output_direct_radiation_raster = ""
    Output_diffuse_radiation_raster = ""
    Output_direct_duration_raster = ""
    Solar_Rad_Whm2 = arcpy.sa.AreaSolarRadiation(in_surface_raster=DSM, latitude=38.92157611011734, sky_size=200, time_configuration="MultiDays 2023 5 160", day_interval=14, hour_interval=1, each_interval="NOINTERVAL", z_factor=1, slope_aspect_input_type="FROM_DEM", calculation_directions=16, zenith_divisions=8, azimuth_divisions=8, diffuse_model_type="UNIFORM_SKY", diffuse_proportion=0.3, transmittivity=0.5, out_direct_radiation_raster=Output_direct_radiation_raster, out_diffuse_radiation_raster=Output_diffuse_radiation_raster, out_direct_duration_raster=Output_direct_duration_raster)
    Solar_Rad_Whm2.save(Area_Solar_Radiation)


    # Process: Surface Parameters (2) (Surface Parameters) (sa)
    Aspect_DSM = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Aspect_DSM"
    Surface_Parameters_2_ = Aspect_DSM
    Aspect_DSM = arcpy.sa.SurfaceParameters(in_raster=DSM, parameter_type="ASPECT", local_surface_type="QUADRATIC", neighborhood_distance="0.5 Meters", use_adaptive_neighborhood="FIXED_NEIGHBORHOOD", z_unit="METER", output_slope_measurement="DEGREE", project_geodesic_azimuths="GEODESIC_AZIMUTHS", use_equatorial_aspect="NORTH_POLE_ASPECT")
    Aspect_DSM.save(Surface_Parameters_2_)


    # Process: Surface Parameters (Surface Parameters) (sa)
    Slope_DSM = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Slope_DSM"
    Surface_Parameters = Slope_DSM
    Slope_DSM = arcpy.sa.SurfaceParameters(in_raster=DSM, parameter_type="SLOPE", local_surface_type="QUADRATIC", neighborhood_distance="0.5 Meters", use_adaptive_neighborhood="FIXED_NEIGHBORHOOD", z_unit="METER", output_slope_measurement="DEGREE", project_geodesic_azimuths="GEODESIC_AZIMUTHS", use_equatorial_aspect="NORTH_POLE_ASPECT")
    Slope_DSM.save(Surface_Parameters)


    # Process: Raster Calculator (Raster Calculator) (ia)
    Solar_Rad = "c:\\Users\\Samuel\\documents\\min_energy\\Week_8\\Lab 3\\solar_in_glover\\solar_in_glover.gdb\\Solar_Rad"
    Raster_Calculator = Solar_Rad
    Solar_Rad =  "%Output global radiation raster%" /1000
    Solar_Rad.save(Raster_Calculator)


    # Process: Con (Con) (sa)
    Solar_Rad_slope = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Solar_Rad_slope"
    Con = Solar_Rad_slope
    Solar_Rad_slope = arcpy.sa.Con(in_conditional_raster=Slope_DSM, in_true_raster_or_constant=Solar_Rad, in_false_raster_or_constant="", where_clause="VALUE <= 45")
    Solar_Rad_slope.save(Con)


    # Process: Con (2) (Con) (sa)
    Solar_Rad_slope_HS = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Solar_Rad_slope_HS"
    Con_2_ = Solar_Rad_slope_HS
    Solar_Rad_slope_HS = arcpy.sa.Con(in_conditional_raster=Solar_Rad_slope, in_true_raster_or_constant=Solar_Rad_slope, in_false_raster_or_constant="", where_clause="VALUE >= 800")
    Solar_Rad_slope_HS.save(Con_2_)


    # Process: Con (3) (Con) (sa)
    Solar_Rad_Low_Slope = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Solar_Rad_Low_Slope"
    Con_3_ = Solar_Rad_Low_Slope
    Solar_Rad_Low_Slope = arcpy.sa.Con(in_conditional_raster=Slope_DSM, in_true_raster_or_constant=Solar_Rad_slope_HS, in_false_raster_or_constant="", where_clause="VALUE <= 10")
    Solar_Rad_Low_Slope.save(Con_3_)


    # Process: Con (4) (Con) (sa)
    Solar_Rad_slope_HS_NN = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Solar_Rad_slope_HS_NN"
    Con_4_ = Solar_Rad_slope_HS_NN
    Solar_Rad_slope_HS_NN = arcpy.sa.Con(in_conditional_raster=Aspect_DSM, in_true_raster_or_constant=Solar_Rad_slope_HS, in_false_raster_or_constant=Solar_Rad_Low_Slope, where_clause="VALUE > 22.5 And VALUE < 337.5")
    Solar_Rad_slope_HS_NN.save(Con_4_)


    # Process: Zonal Statistics as Table (Zonal Statistics as Table) (sa)
    Solar_Rad_Table = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Solar_Rad_Table"
    arcpy.sa.ZonalStatisticsAsTable(in_zone_data=Building_Footprints, zone_field="Building_ID", in_value_raster=Solar_Rad_slope_HS_NN, out_table=Solar_Rad_Table, ignore_nodata="DATA", statistics_type="MEAN", process_as_multidimensional="CURRENT_SLICE", percentile_values=[90], percentile_interpolation_type="AUTO_DETECT", circular_calculation="ARITHMETIC", circular_wrap_value=360)
    .save(Zonal_Statistics_as_Table)


    # Process: Join Field (Join Field) (management)
    Building_Footprints_2_ = arcpy.management.JoinField(in_data=Building_Footprints, in_field="Building_ID", join_table=Solar_Rad_Table, join_field="Building_ID", fields=["AREA", "MEAN"], fm_option="NOT_USE_FM", field_mapping="")[0]

    # Process: Select Layer By Attribute (Select Layer By Attribute) (management)
    Building_Footprints_3_, Count = arcpy.management.SelectLayerByAttribute(in_layer_or_view=Building_Footprints_2_, selection_type="NEW_SELECTION", where_clause="AREA > 30", invert_where_clause="")

    # Process: Export Features (Export Features) (conversion)
    Selected_Building = "C:\\Users\\Samuel\\Documents\\Min_Energy\\Week_8\\Lab 3\\Solar_in_Glover\\Solar_in_Glover.gdb\\Selected_Building"
    arcpy.conversion.ExportFeatures(in_features=Building_Footprints_3_, out_features=Selected_Building, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", field_mapping="Building_ID \"Building_ID\" true true false 4 Long 0 0,First,#,Building_Footprints,Building_ID,-1,-1;Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,Building_Footprints,Shape_Length,-1,-1;Shape_Area \"Shape_Area\" false true true 8 Double 0 0,First,#,Building_Footprints,Shape_Area,-1,-1;AREA \"AREA\" true true false 0 Double 0 0,First,#,Building_Footprints,AREA,-1,-1;MEAN \"MEAN\" true true false 0 Double 0 0,First,#,Building_Footprints,MEAN,-1,-1", sort_field=[])

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(extent="392862.85 138765.85 394195.85 139840.35 PROJCS["NAD_1983_StatePlane_Maryland_FIPS_1900",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",400000.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-77.0],PARAMETER["Standard_Parallel_1",38.3],PARAMETER["Standard_Parallel_2",39.45],PARAMETER["Latitude_Of_Origin",37.66666666666666],UNIT["Meter",1.0]]", mask=r"C:\Users\Samuel\Documents\Min_Energy\Week_8\Lab 3\Solar_in_Glover\Solar_in_Glover.gdb\DSM", outputCoordinateSystem="PROJCS["NAD_1983_StatePlane_Maryland_FIPS_1900",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",400000.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-77.0],PARAMETER["Standard_Parallel_1",38.3],PARAMETER["Standard_Parallel_2",39.45],PARAMETER["Latitude_Of_Origin",37.66666666666666],UNIT["Meter",1.0]]", 
                          scratchWorkspace=r"C:\Users\Samuel\Documents\Min_Energy\Week_8\Lab 3\Solar_in_Glover\Solar_in_Glover.gdb", snapRaster=r"C:\Users\Samuel\Documents\Min_Energy\Week_8\Lab 3\Solar_in_Glover\Solar_in_Glover.gdb\DSM", workspace=r"C:\Users\Samuel\Documents\Min_Energy\Week_8\Lab 3\Solar_in_Glover\Solar_in_Glover.gdb"):
        Model()
